{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bpenchalaiah\\\\Desktop\\\\food app\\\\frontend\\\\src\\\\pages\\\\myorders\\\\Myorders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport './Myorders.css';\nimport { StoreContext } from '../../context/Storecontext';\nimport axios from 'axios';\nimport { assets } from '../../assets/assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Myorders = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const {\n    url,\n    token\n  } = useContext(StoreContext);\n  const fetchOrders = async () => {\n    try {\n      const response = await axios.post(`${url}/api/order/userorders`, {}, {\n        headers: {\n          token\n        }\n      });\n      setData(response.data.data);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n    }\n  };\n  useEffect(() => {\n    if (token) {\n      fetchOrders();\n    }\n  }, [token, url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-orders\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: data.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-orders-order\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: assets.parcel_icon,\n          alt: \"Parcel icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: order.items.map(item => `${item.name} x${item.quantity}`).join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", order.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Items: \", order.items.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u25CF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: order.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchOrders,\n          children: \"Track order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, order._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Myorders, \"ylhu1Dn7v7pG4D/1qinMmgLteQc=\");\n_c = Myorders;\nexport default Myorders;\nvar _c;\n$RefreshReg$(_c, \"Myorders\");","map":{"version":3,"names":["React","useContext","useEffect","useState","StoreContext","axios","assets","jsxDEV","_jsxDEV","Myorders","_s","data","setData","url","token","fetchOrders","response","post","headers","error","console","className","children","map","order","src","parcel_icon","alt","fileName","_jsxFileName","lineNumber","columnNumber","items","item","name","quantity","join","amount","length","status","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/bpenchalaiah/Desktop/food app/frontend/src/pages/myorders/Myorders.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport './Myorders.css';\r\nimport { StoreContext } from '../../context/Storecontext';\r\nimport axios from 'axios';\r\nimport { assets } from '../../assets/assets';\r\n\r\nconst Myorders = () => {\r\n    const [data, setData] = useState([]);\r\n    const { url, token } = useContext(StoreContext);\r\n\r\n    const fetchOrders = async () => {\r\n        try {\r\n            const response = await axios.post(`${url}/api/order/userorders`, {}, { headers: { token } });\r\n            setData(response.data.data);\r\n        } catch (error) {\r\n            console.error('Error fetching orders:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            fetchOrders();\r\n        }\r\n    }, [token, url]);\r\n\r\n    return (\r\n        <div className='my-orders'>\r\n            <div className=\"container\">\r\n                {data.map((order) => (\r\n                    <div className='my-orders-order' key={order._id}>\r\n                        <img src={assets.parcel_icon} alt=\"Parcel icon\" />\r\n                        <p>{order.items.map(item => `${item.name} x${item.quantity}`).join(', ')}</p> \r\n                        <p>${order.amount}</p>\r\n                        <p>Items: {order.items.length}</p>\r\n                        <p><span>&#x25cf;</span><b>{order.status}</b></p>\r\n                        <button onClick={fetchOrders}>Track order</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Myorders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}